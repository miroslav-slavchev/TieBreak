name: Playwright .NET Tests

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  test-inventory:
    runs-on: ubuntu-latest
    permissions: write-all # Permissions needed for checkout and artifact upload
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Perform a full clone to prevent git errors (exit code 128)

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release

      - name: Install Playwright CLI
        run: |
          dotnet tool install --global Microsoft.Playwright.CLI
          playwright install --with-deps

      - name: Create test_results folder for Inventory Tests
        run: mkdir -p test_results

      - name: Run Inventory Tests and generate TRX report
        # Filter tests by namespace starting with 'SwagLabs.Tests.InventoryItems'
        # Output to a specific file name in the test_results directory
        run: dotnet test ./SwagLabs.Tests/SwagLabs.Tests.csproj --logger "trx;LogFileName=results-inventory.trx" --results-directory test_results --filter "FullyQualifiedName~SwagLabs.Tests.InventoryItems"

      - name: Install ReportGenerator for HTML conversion (Inventory)
        # Install the ReportGenerator tool globally to convert TRX to HTML
        run: |
          dotnet tool install -g ReportGenerator

      - name: Convert Inventory TRX to HTML using ReportGenerator
        # ReportGenerator will process the single TRX file and output an HTML report
        run: |
          reportgenerator "-reports:test_results/results-inventory.trx" "-targetdir:test_results/html-report-inventory" -reporttypes:Html

          echo "Listing generated Inventory HTML report directory:"
          ls -la test_results/html-report-inventory || echo "Inventory HTML report directory not found."

      - name: Upload Inventory HTML Report
        uses: actions/upload-artifact@v4
        if: always() # Upload even if tests fail
        with:
          name: Inventory-HTML-Report # Unique name for this artifact
          path: test_results/html-report-inventory/ # Upload the entire HTML report directory
          if-no-files-found: error # Fail the job if the HTML report isn't found

  test-shopping-cart:
    runs-on: ubuntu-latest
    permissions: write-all # Permissions needed for checkout and artifact upload
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Perform a full clone to prevent git errors (exit code 128)

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release

      - name: Install Playwright CLI
        run: |
          dotnet tool install --global Microsoft.Playwright.CLI
          playwright install --with-deps

      - name: Create test_results folder for Shopping Cart Tests
        run: mkdir -p test_results

      - name: Run Shopping Cart Tests and generate TRX report
        # Filter tests by namespace starting with 'SwagLabs.Tests.ShoppingCartTests'
        # Output to a specific file name in the test_results directory
        run: dotnet test ./SwagLabs.Tests/SwagLabs.Tests.csproj --logger "trx;LogFileName=results-shopping-cart.trx" --results-directory test_results --filter "FullyQualifiedName~SwagLabs.Tests.ShoppingCartTests"

      - name: Install ReportGenerator for HTML conversion (Shopping Cart)
        # Install the ReportGenerator tool globally to convert TRX to HTML
        run: |
          dotnet tool install -g ReportGenerator

      - name: Convert Shopping Cart TRX to HTML using ReportGenerator
        # ReportGenerator will process the single TRX file and output an HTML report
        run: |
          reportgenerator "-reports:test_results/results-shopping-cart.trx" "-targetdir:test_results/html-report-shopping-cart" -reporttypes:Html

          echo "Listing generated Shopping Cart HTML report directory:"
          ls -la test_results/html-report-shopping-cart || echo "Shopping Cart HTML report directory not found."

      - name: Upload Shopping Cart HTML Report
        uses: actions/upload-artifact@v4
        if: always() # Upload even if tests fail
        with:
          name: ShoppingCart-HTML-Report # Unique name for this artifact
          path: test_results/html-report-shopping-cart/ # Upload the entire HTML report directory
          if-no-files-found: error # Fail the job if the HTML report isn't found
